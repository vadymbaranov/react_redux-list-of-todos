{"version":3,"sources":["features/currentTodo.ts","types/Status.ts","features/filter.ts","api.ts","features/todos.ts","app/store.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","app/hooks.ts","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","currentTodo","arguments","length","undefined","action","Status","status","input","initialState","query","All","filterReducer","filter","_objectSpread","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","initialTodos","todosReducer","todos","concat","_toConsumableArray","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","TodoList","_ref","visibleTodos","selectedTodo","onSelectedTodo","_jsxs","className","children","_jsx","map","classNames","id","completed","title","onClick","TodoFilter","todosStatus","onChangeTodosStatus","onChangeQuery","value","onChange","event","target","Active","Completed","placeholder","style","pointerEvents","Loader","TodoModal","onRemove","_useState","useState","_useState2","_slicedToArray","curentUserId","setCurrentUserId","useEffect","userId","href","email","name","useAppDispatch","useDispatch","useAppSelector","useSelector","App","dispatch","state","_useAppSelector","loadedTodos","setLoadedTodos","useMemo","queried","toLocaleLowerCase","includes","_Fragment","filterActions","currentTodoActions","Root","Provider","Router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7075d705.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  currentTodo: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return currentTodo;\n  }\n};\n\nexport default currentTodoReducer;\n","export enum Status {\n  All = 'All',\n  Active = 'Active',\n  Completed = 'Completed',\n}\n","import { Status } from '../types/Status';\n\ntype SetStatusAction = {\n  type: 'filter/SETSTATUS',\n  payload: string;\n};\n\ntype SetQueryAction = {\n  type: 'filter/SETQUERY';\n  payload: string;\n};\n\nconst setStatus = (status: string): SetStatusAction => ({\n  type: 'filter/SETSTATUS',\n  payload: status,\n});\n\nconst setQuery = (input: string): SetQueryAction => ({\n  type: 'filter/SETQUERY',\n  payload: input,\n});\n\nexport const actions = { setStatus, setQuery };\n\ntype InitialState = {\n  query: string,\n  status: string,\n};\n\ntype Action = SetQueryAction | SetStatusAction;\n\nconst initialState = {\n  query: '',\n  status: Status.All,\n};\n\nconst filterReducer = (\n  filter: InitialState = initialState,\n  action: Action,\n): InitialState => {\n  switch (action.type) {\n    case 'filter/SETQUERY':\n      return {\n        ...filter,\n        query: action.payload,\n      };\n    case 'filter/SETSTATUS':\n      return {\n        ...filter,\n        status: action.payload,\n      };\n\n    default:\n      return filter;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { Todo } from '../types/Todo';\nimport { getTodos } from '../api';\n\ntype AddAction = {\n  type: 'todos/ADD';\n  payload: Todo;\n};\n\ntype RemoveAction = {\n  type: 'todos/REMOVE';\n  payload: Todo;\n};\n\nconst add = (todo: Todo): AddAction => ({\n  type: 'todos/ADD',\n  payload: todo,\n});\n\nconst remove = (todo: Todo): RemoveAction => ({\n  type: 'todos/REMOVE',\n  payload: todo,\n});\n\ntype Action = AddAction | RemoveAction;\n\nexport const actions = { add, remove };\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst initialTodos: any = getTodos().then(res => res);\n\nconst todosReducer = (\n  todos: Todo[] = initialTodos,\n  action: Action,\n): Todo[] => {\n  switch (action.type) {\n    case 'todos/ADD':\n      return [...todos, action.payload];\n\n    case 'todos/REMOVE':\n      return todos.filter(todo => todo !== action.payload);\n\n    default:\n      return todos;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  visibleTodos: Todo[],\n  selectedTodo: Todo | null,\n  onSelectedTodo: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({ visibleTodos, selectedTodo, onSelectedTodo }) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {visibleTodos.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': todo.id === selectedTodo?.id,\n            })}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames({\n                    'far fa-eye': !selectedTodo?.id,\n                    'far fa-eye-slash': selectedTodo?.id === todo.id,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { Status } from '../../types/Status';\n\ntype Props = {\n  query: string,\n  todosStatus: string,\n  onChangeTodosStatus: (filter: string) => void,\n  onChangeQuery: (query: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  todosStatus,\n  onChangeTodosStatus,\n  onChangeQuery,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={todosStatus}\n            onChange={event => {\n              onChangeTodosStatus(event.target.value);\n            }}\n          >\n            <option value={Status.All}>{Status.All}</option>\n            <option value={Status.Active}>{Status.Active}</option>\n            <option value={Status.Completed}>{Status.Completed}</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => onChangeQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onChangeQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  currentTodo: Todo,\n  onRemove: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ currentTodo, onRemove }) => {\n  const [curentUserId, setCurrentUserId] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(currentTodo.userId).then(setCurrentUserId);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!curentUserId ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${currentTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onRemove()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {currentTodo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n              {' by '}\n              <a href={`mailto:${curentUserId.email}`}>\n                {curentUserId.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport React, { useState, useMemo, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n// import { useDispatch } from 'react-redux';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { Todo } from './types/Todo';\n// import { actions as todosActions } from './features/todos';\nimport { Status } from './types/Status';\nimport { getTodos } from './api';\nimport { actions as currentTodoActions } from './features/currentTodo';\nimport { actions as filterActions } from './features/filter';\n// import { actions as todosActions } from './features/todos';\n\nexport const App: React.FC = () => {\n  const dispatch = useAppDispatch();\n  // const todos = useAppSelector(state => state.todos);\n\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const { query, status } = useAppSelector(state => state.filter);\n\n  const [loadedTodos, setLoadedTodos] = useState<Todo[]>([]);\n\n  // const addTodo = (todoToAdd: Todo) => dispatch(todosActions.add(todoToAdd));\n  // const removeTodo = (todoToRemove: Todo) => dispatch(todosActions.remove(todoToRemove));\n\n  const setCurrentTodo = (todo: Todo) => dispatch(currentTodoActions.setTodo(todo));\n  const removeCurrentTodo = () => dispatch(currentTodoActions.removeTodo());\n\n  const setStatus = (filter: string) => dispatch(filterActions.setStatus(filter));\n  const setQuery = (input: string) => dispatch(filterActions.setQuery(input));\n\n  const visibleTodos = useMemo(() => {\n    return loadedTodos.filter(todo => {\n      const queried = todo?.title.toLocaleLowerCase()\n        .includes(query?.toLocaleLowerCase());\n\n      switch (status) {\n        case Status.Completed:\n          return todo?.completed && queried;\n\n        case Status.Active:\n          return !todo?.completed && queried;\n\n        case Status.All:\n        default:\n          return queried;\n      }\n    });\n  }, [status, query, loadedTodos]);\n\n  useEffect(() => {\n    getTodos()\n      .then(setLoadedTodos);\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter query={query} todosStatus={status} onChangeTodosStatus={setStatus} onChangeQuery={setQuery} />\n            </div>\n\n            <div className=\"block\">\n              {visibleTodos.length > 0 ? (\n                <TodoList\n                  visibleTodos={visibleTodos}\n                  selectedTodo={currentTodo}\n                  onSelectedTodo={setCurrentTodo}\n                />\n              ) : (\n                <Loader />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && (\n        <TodoModal currentTodo={currentTodo} onRemove={removeCurrentTodo} />\n      )}\n\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}